CCS PCM C Compiler, Version 5.105Pd, 1               22-Aðu-21 14:27
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\hakan\Documents\GitHub\GomuluSistemler\Uygulamalar\001\main.lst

               ROM used:   63 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=20000000)
.................... 
.................... 
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG
.................... 
.................... #use delay(clock=4M)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... 
.................... void main()
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... {
....................    set_tris_b(0); //RB0 output olarak kullan
0024:  MOVLW  00
0025:  MOVWF  06
....................    while(TRUE)
....................    {
....................       output_b(0x01); //RB0 a HEX01 gonderildi. Led yandi.
0026:  CLRF   06
0027:  MOVLW  01
0028:  BCF    03.5
0029:  MOVWF  06
....................       delay_ms(500); //500ms bekle
002A:  MOVLW  02
002B:  MOVWF  21
002C:  MOVLW  FA
002D:  MOVWF  22
002E:  CALL   004
002F:  DECFSZ 21,F
0030:  GOTO   02C
....................       output_b(0x00); //RB0 s HEX00 gonderildi. Led sondu.
0031:  BSF    03.5
0032:  CLRF   06
0033:  BCF    03.5
0034:  CLRF   06
....................       delay_ms(500); //500ms bekle
0035:  MOVLW  02
0036:  MOVWF  21
0037:  MOVLW  FA
0038:  MOVWF  22
0039:  CALL   004
003A:  DECFSZ 21,F
003B:  GOTO   037
003C:  BSF    03.5
003D:  GOTO   026
....................       //TODO: User Code
....................    }
.................... 
.................... }
003E:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
