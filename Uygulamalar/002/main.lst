CCS PCM C Compiler, Version 5.105Pd, 1               23-Aðu-21 13:31
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\hakan\Documents\GitHub\GomuluSistemler\Uygulamalar\002\main.lst

               ROM used:   40 words (0%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=20000000)
.................... 
.................... 
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG
.................... 
.................... #use delay(clock=4M)
.................... 
.................... #define BUTON1 pin_b0
.................... #define BUTON2 pin_b1
.................... #define LED pin_b7
.................... 
.................... void main()
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
.................... {
....................    set_tris_b(0x03); //0000 0011 0 ve 1 nolu pinler yani input oldular digerleri ise output
000F:  MOVLW  03
0010:  MOVWF  06
....................    output_b(0); //outputlarý 0 basýldý.
0011:  CLRF   06
0012:  BCF    03.5
0013:  CLRF   06
....................    while(TRUE)
....................    {
....................       if(input(BUTON1)==1){ //BUTON1 e basildiysa
0014:  BSF    03.5
0015:  BSF    06.0
0016:  BCF    03.5
0017:  BTFSS  06.0
0018:  GOTO   01D
....................          output_high(LED); //LED i ac
0019:  BSF    03.5
001A:  BCF    06.7
001B:  BCF    03.5
001C:  BSF    06.7
....................       }
....................       if(input(BUTON2)==1){
001D:  BSF    03.5
001E:  BSF    06.1
001F:  BCF    03.5
0020:  BTFSS  06.1
0021:  GOTO   026
....................          output_low(LED); //LED i kapat
0022:  BSF    03.5
0023:  BCF    06.7
0024:  BCF    03.5
0025:  BCF    06.7
....................       }
0026:  GOTO   014
....................    }
.................... 
.................... }
0027:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
